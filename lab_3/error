Введите ваше имя для GPG ключа: dima
Введите ваш email для GPG ключа: dima@did.ua
[-] Ключ не найден. Создаем новый GPG ключ...
gpg: -:3: invalid algorithm
[+] Ключ для dima <dima@did.ua> успешно создан.
[+] Подписываем файл sys.tat...
gpg: skipped "dima <dima@did.ua>": No secret key
gpg: signing failed: No secret key
[-] Ошибка при подписании файла: Command 'gpg --armor --detach-sign -u 'dima <dima@did.ua>' sys.tat' returned non-zero exit status 2.
[+] Включаем защиту для файла sys.tat.
def gpg_sign_file():
    # Путь к файлу, который нужно подписать
    file_to_sign = "sys.tat"
    
    # Запрашиваем у пользователя имя и email для создания или выбора ключа
    user_name = input("Введите ваше имя для GPG ключа: ")
    user_email = input("Введите ваш email для GPG ключа: ")
    
    # Проверяем, существует ли GPG ключ с таким именем и email
    try:
        check_key_command = f"gpg --list-keys '{user_name} <{user_email}>'"
        result = subprocess.run(check_key_command, shell=True, capture_output=True, text=True)
        if "pub" not in result.stdout:
            print("[-] Ключ не найден. Создаем новый GPG ключ...")
            
            # Создание нового GPG ключа
            generate_key_command = f"gpg --batch --generate-key"
            key_config = f"""
            %no-protection
            Key-Type: defaulty
            Subkey-Type: default
            Name-Real: {user_name}
            Name-Email: {user_email}
            Expire-Date: 0
            """
            subprocess.run(generate_key_command, input=key_config, text=True, shell=True)
            print(f"[+] Ключ для {user_name} <{user_email}> успешно создан.")
        else:
            print(f"[+] Ключ для {user_name} <{user_email}> найден, используем его для подписи.")
    except subprocess.CalledProcessError as e:
        print(f"[-] Ошибка при проверке или создании ключа: {e}")
        return

    #sign_path = ".config/sys.tat.asc"
    # Подписываем файл
    print(f"[+] Подписываем файл {file_to_sign}...")
    try:
        sign_command = f"gpg --armor --detach-sign -u '{user_name} <{user_email}>' {file_to_sign}"
        # sign_command = f"gpg --armor --detach-sign -u '{user_name} <{user_email}>' -o {sign_path} {file_to_sign}"
        subprocess.run(sign_command, shell=True, check=True)
        print(f"[+] Файл {file_to_sign} успешно подписан.")
    except subprocess.CalledProcessError as e:
        print(f"[-] Ошибка при подписании файла: {e}")
        return

    # Экспортируем открытый ключ
    config_dir = ".config"
    os.makedirs(config_dir, exist_ok=True)
    public_key_path = os.path.join(config_dir, "public_key.asc")

    print(f"[+] Экспортируем открытый ключ в {public_key_path}...")
    try:
        export_command = f"gpg --export -a '{user_name} <{user_email}>' > {public_key_path}"
        subprocess.run(export_command, shell=True, check=True)
        print(f"[+] Открытый ключ успешно экспортирован в {public_key_path}.")
    except subprocess.CalledProcessError as e:
        print(f"[-] Ошибка при экспорте открытого ключа: {e}")
        return

